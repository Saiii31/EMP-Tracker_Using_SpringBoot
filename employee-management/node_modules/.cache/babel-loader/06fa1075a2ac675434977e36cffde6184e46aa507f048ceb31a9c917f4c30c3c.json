{"ast":null,"code":"var _jsxFileName = \"D:\\\\sai\\\\SpringBoot\\\\em-project\\\\employee-management\\\\src\\\\components\\\\EmployeeList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getEmployees, deleteEmployee } from \"../api/employeeService\";\nimport { useNavigate } from \"react-router-dom\";\nimport '../styles/employeeLis';\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmployeeList() {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [loadingStates, setLoadingStates] = useState({}); // Manage loading state per employee\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const data = await getEmployees();\n        setEmployees(data);\n      } catch (error) {\n        toast.error(\"Failed to fetch employees. Please try again later.\");\n      }\n    }\n    fetchData();\n  }, []);\n  const handleDelete = async id => {\n    setLoadingStates(prevState => ({\n      ...prevState,\n      [id]: true\n    })); // Set loading for the specific employee\n    try {\n      await deleteEmployee(id);\n      setEmployees(prevEmployees => prevEmployees.filter(emp => emp.id !== id));\n      toast.success(\"Employee deleted successfully.\");\n    } catch (error) {\n      var _error$response, _error$response2;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 404) {\n        toast.error(`Employee with ID ${id} not found.`);\n      } else if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 405) {\n        toast.error(\"Method not allowed. Please check the server.\");\n      } else {\n        toast.error(\"An unexpected error occurred.\");\n      }\n    } finally {\n      setLoadingStates(prevState => ({\n        ...prevState,\n        [id]: false\n      })); // Reset loading for the specific employee\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employee List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/add\"),\n      children: \"Add Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(emp => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: emp.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: emp.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: emp.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigate(`/edit/${emp.id}`),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(emp.id),\n              disabled: loadingStates[emp.id] || false // Disable button only for the currently loading employee\n              ,\n              children: loadingStates[emp.id] ? \"Deleting...\" : \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, emp.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(EmployeeList, \"yQAResfVsKZca2acKdm5vBxlchE=\", false, function () {\n  return [useNavigate];\n});\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useEffect","useState","getEmployees","deleteEmployee","useNavigate","toast","jsxDEV","_jsxDEV","EmployeeList","_s","employees","setEmployees","loadingStates","setLoadingStates","navigate","fetchData","data","error","handleDelete","id","prevState","prevEmployees","filter","emp","success","_error$response","_error$response2","response","status","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","name","email","phone","disabled","_c","$RefreshReg$"],"sources":["D:/sai/SpringBoot/em-project/employee-management/src/components/EmployeeList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getEmployees, deleteEmployee } from \"../api/employeeService\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport '../styles/employeeLis';\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction EmployeeList() {\r\n    const [employees, setEmployees] = useState([]);\r\n    const [loadingStates, setLoadingStates] = useState({}); // Manage loading state per employee\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const data = await getEmployees();\r\n                setEmployees(data);\r\n            } catch (error) {\r\n                toast.error(\"Failed to fetch employees. Please try again later.\");\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleDelete = async (id) => {\r\n        setLoadingStates((prevState) => ({ ...prevState, [id]: true })); // Set loading for the specific employee\r\n        try {\r\n            await deleteEmployee(id);\r\n            setEmployees((prevEmployees) => prevEmployees.filter((emp) => emp.id !== id));\r\n            toast.success(\"Employee deleted successfully.\");\r\n        } catch (error) {\r\n            if (error.response?.status === 404) {\r\n                toast.error(`Employee with ID ${id} not found.`);\r\n            } else if (error.response?.status === 405) {\r\n                toast.error(\"Method not allowed. Please check the server.\");\r\n            } else {\r\n                toast.error(\"An unexpected error occurred.\");\r\n            }\r\n        } finally {\r\n            setLoadingStates((prevState) => ({ ...prevState, [id]: false })); // Reset loading for the specific employee\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Employee List</h1>\r\n            <button onClick={() => navigate(\"/add\")}>Add Employee</button>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Phone</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {employees.map((emp) => (\r\n                        <tr key={emp.id}>\r\n                            <td>{emp.name}</td>\r\n                            <td>{emp.email}</td>\r\n                            <td>{emp.phone}</td>\r\n                            <td>\r\n                                <button onClick={() => navigate(`/edit/${emp.id}`)}>Edit</button>\r\n                                <button\r\n                                    onClick={() => handleDelete(emp.id)}\r\n                                    disabled={loadingStates[emp.id] || false} // Disable button only for the currently loading employee\r\n                                >\r\n                                    {loadingStates[emp.id] ? \"Deleting...\" : \"Delete\"}\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmployeeList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}