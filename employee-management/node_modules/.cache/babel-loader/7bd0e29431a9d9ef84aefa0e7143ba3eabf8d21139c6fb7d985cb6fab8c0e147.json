{"ast":null,"code":"var _jsxFileName = \"D:\\\\sai\\\\SpringBoot\\\\em-project\\\\employee-management\\\\src\\\\components\\\\EmployeeList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getEmployees, deleteEmployee } from \"../api/employeeService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport '../styles/e';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure();\nfunction EmployeeList() {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [loadingIds, setLoadingIds] = useState([]); // Track loading state per employee\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const data = await getEmployees();\n        setEmployees(data);\n      } catch (error) {\n        toast.error(\"Failed to fetch employees. Please try again later.\");\n      }\n    }\n    fetchData();\n  }, []);\n  const handleDelete = async id => {\n    setLoadingIds(prev => [...prev, id]); // Mark this employee as being deleted\n    try {\n      await deleteEmployee(id);\n      setEmployees(prev => prev.filter(emp => emp.id !== id)); // Remove from list\n      toast.success(\"Employee deleted successfully.\");\n    } catch (error) {\n      // Handle different types of errors\n      if (error.response) {\n        if (error.response.status === 404) {\n          toast.error(`Employee with ID ${id} not found.`);\n        } else if (error.response.status === 405) {\n          toast.error(\"Method not allowed. Please check the server.\");\n        } else {\n          toast.error(\"An unexpected error occurred.\");\n        }\n      } else {\n        toast.error(\"Network error or unexpected issue.\");\n      }\n    } finally {\n      setLoadingIds(prev => prev.filter(empId => empId !== id)); // Remove the loading state for this employee\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employee List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/add\"),\n      children: \"Add Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(emp => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: emp.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: emp.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: emp.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigate(`/edit/${emp.id}`),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(emp.id),\n              disabled: loadingIds.includes(emp.id) // Disable button if employee is being deleted\n              ,\n              children: loadingIds.includes(emp.id) ? \"Deleting...\" : \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, emp.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(EmployeeList, \"vJStlSpX0QlLBpvr5JUi3fwkKFI=\", false, function () {\n  return [useNavigate];\n});\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useEffect","useState","getEmployees","deleteEmployee","useNavigate","toast","jsxDEV","_jsxDEV","configure","EmployeeList","_s","employees","setEmployees","loadingIds","setLoadingIds","navigate","fetchData","data","error","handleDelete","id","prev","filter","emp","success","response","status","empId","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","name","email","phone","disabled","includes","_c","$RefreshReg$"],"sources":["D:/sai/SpringBoot/em-project/employee-management/src/components/EmployeeList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getEmployees, deleteEmployee } from \"../api/employeeService\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport '../styles/e';\r\n\r\ntoast.configure();\r\n\r\nfunction EmployeeList() {\r\n    const [employees, setEmployees] = useState([]);\r\n    const [loadingIds, setLoadingIds] = useState([]); // Track loading state per employee\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const data = await getEmployees();\r\n                setEmployees(data);\r\n            } catch (error) {\r\n                toast.error(\"Failed to fetch employees. Please try again later.\");\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleDelete = async (id) => {\r\n        setLoadingIds((prev) => [...prev, id]); // Mark this employee as being deleted\r\n        try {\r\n            await deleteEmployee(id);\r\n            setEmployees((prev) => prev.filter((emp) => emp.id !== id)); // Remove from list\r\n            toast.success(\"Employee deleted successfully.\");\r\n        } catch (error) {\r\n            // Handle different types of errors\r\n            if (error.response) {\r\n                if (error.response.status === 404) {\r\n                    toast.error(`Employee with ID ${id} not found.`);\r\n                } else if (error.response.status === 405) {\r\n                    toast.error(\"Method not allowed. Please check the server.\");\r\n                } else {\r\n                    toast.error(\"An unexpected error occurred.\");\r\n                }\r\n            } else {\r\n                toast.error(\"Network error or unexpected issue.\");\r\n            }\r\n        } finally {\r\n            setLoadingIds((prev) => prev.filter((empId) => empId !== id)); // Remove the loading state for this employee\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Employee List</h1>\r\n            <button onClick={() => navigate(\"/add\")}>Add Employee</button>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Phone</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {employees.map((emp) => (\r\n                        <tr key={emp.id}>\r\n                            <td>{emp.name}</td>\r\n                            <td>{emp.email}</td>\r\n                            <td>{emp.phone}</td>\r\n                            <td>\r\n                                <button onClick={() => navigate(`/edit/${emp.id}`)}>Edit</button>\r\n                                <button\r\n                                    onClick={() => handleDelete(emp.id)}\r\n                                    disabled={loadingIds.includes(emp.id)} // Disable button if employee is being deleted\r\n                                >\r\n                                    {loadingIds.includes(emp.id) ? \"Deleting...\" : \"Delete\"}\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmployeeList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}