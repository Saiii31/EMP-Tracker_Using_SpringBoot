{"ast":null,"code":"var _jsxFileName = \"D:\\\\sai\\\\SpringBoot\\\\em-project\\\\employee-management\\\\src\\\\components\\\\EmployeeForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, useParams } from \"react-router-dom\";\n// import { createEmployee, updateEmployee, getEmployees } from \"../api/employeeService\";\n// import \"../styles/formStyle.css\"\n\n// function EmployeeForm() {\n//     const [employee, setEmployee] = useState({ name: \"\", email: \"\", phone: \"\" });\n//     const navigate = useNavigate();\n//     const { id } = useParams();\n\n//     useEffect(() => {\n//         if (id) {\n//             async function fetchEmployee() {\n//                 const employees = await getEmployees();\n//                 const emp = employees.find((emp) => emp.id === parseInt(id));\n//                 if (emp) setEmployee(emp);\n//             }\n//             fetchEmployee();\n//         }\n//     }, [id]);\n\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setEmployee({ ...employee, name: value });\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         if (id) {\n//             await updateEmployee(id, employee);\n//         } else {\n//             await createEmployee(employee);\n//         }\n//         navigate(\"/\");\n//     };\n\n//     return (\n//         <form onSubmit={handleSubmit}>\n//             <div>\n//                 <label>Name:</label>\n//                 <input name=\"name\" value={employee.name} onChange={handleChange} />\n//             </div>\n//             <div>\n//                 <label>Email:</label>\n//                 <input name=\"email\" value={employee.email} onChange={handleChange} />\n//             </div>\n//             <div>\n//                 <label>Phone:</label>\n//                 <input name=\"phone\" value={employee.phone} onChange={handleChange} />\n//             </div>\n//             <button type=\"submit\">{id ? \"Update\" : \"Create\"} Employee</button>\n//         </form>\n//     );\n// }\n\n// export default EmployeeForm;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { createEmployee, updateEmployee, getEmployees } from \"../api/employeeService\";\nimport \"../styles/formStyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmployeeForm() {\n  _s();\n  const [employee, setEmployee] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\"\n  });\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (id) {\n      async function fetchEmployee() {\n        const employees = await getEmployees();\n        const emp = employees.find(emp => emp.id === parseInt(id));\n        if (emp) setEmployee(emp);\n      }\n      fetchEmployee();\n    }\n  }, [id]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEmployee({\n      ...employee,\n      [name]: value\n    }); // Dynamically update the corresponding field\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (id) {\n      await updateEmployee(id, employee);\n    } else {\n      await createEmployee(employee);\n    }\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        value: employee.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        value: employee.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Phone:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"phone\",\n        value: employee.phone,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 6\n    }, this), \"       \", /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: [id ? \"Update\" : \"Create\", \" Employee\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n_s(EmployeeForm, \"4MeKeFr7Xamj0dbAVmTZqnJUpLo=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = EmployeeForm;\nexport default EmployeeForm;\nvar _c;\n$RefreshReg$(_c, \"EmployeeForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","createEmployee","updateEmployee","getEmployees","jsxDEV","_jsxDEV","EmployeeForm","_s","employee","setEmployee","name","email","phone","navigate","id","fetchEmployee","employees","emp","find","parseInt","handleChange","e","value","target","handleSubmit","preventDefault","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","_c","$RefreshReg$"],"sources":["D:/sai/SpringBoot/em-project/employee-management/src/components/EmployeeForm.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { useNavigate, useParams } from \"react-router-dom\";\r\n// import { createEmployee, updateEmployee, getEmployees } from \"../api/employeeService\";\r\n// import \"../styles/formStyle.css\"\r\n\r\n// function EmployeeForm() {\r\n//     const [employee, setEmployee] = useState({ name: \"\", email: \"\", phone: \"\" });\r\n//     const navigate = useNavigate();\r\n//     const { id } = useParams();\r\n\r\n//     useEffect(() => {\r\n//         if (id) {\r\n//             async function fetchEmployee() {\r\n//                 const employees = await getEmployees();\r\n//                 const emp = employees.find((emp) => emp.id === parseInt(id));\r\n//                 if (emp) setEmployee(emp);\r\n//             }\r\n//             fetchEmployee();\r\n//         }\r\n//     }, [id]);\r\n\r\n//     const handleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setEmployee({ ...employee, name: value });\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         if (id) {\r\n//             await updateEmployee(id, employee);\r\n//         } else {\r\n//             await createEmployee(employee);\r\n//         }\r\n//         navigate(\"/\");\r\n//     };\r\n\r\n//     return (\r\n//         <form onSubmit={handleSubmit}>\r\n//             <div>\r\n//                 <label>Name:</label>\r\n//                 <input name=\"name\" value={employee.name} onChange={handleChange} />\r\n//             </div>\r\n//             <div>\r\n//                 <label>Email:</label>\r\n//                 <input name=\"email\" value={employee.email} onChange={handleChange} />\r\n//             </div>\r\n//             <div>\r\n//                 <label>Phone:</label>\r\n//                 <input name=\"phone\" value={employee.phone} onChange={handleChange} />\r\n//             </div>\r\n//             <button type=\"submit\">{id ? \"Update\" : \"Create\"} Employee</button>\r\n//         </form>\r\n//     );\r\n// }\r\n\r\n// export default EmployeeForm;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { createEmployee, updateEmployee, getEmployees } from \"../api/employeeService\";\r\nimport \"../styles/formStyle.css\";\r\n\r\nfunction EmployeeForm() {\r\n    const [employee, setEmployee] = useState({ name: \"\", email: \"\", phone: \"\" });\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            async function fetchEmployee() {\r\n                const employees = await getEmployees();\r\n                const emp = employees.find((emp) => emp.id === parseInt(id));\r\n                if (emp) setEmployee(emp);\r\n            }\r\n            fetchEmployee();\r\n        }\r\n    }, [id]);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setEmployee({ ...employee, [name]: value }); // Dynamically update the corresponding field\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (id) {\r\n            await updateEmployee(id, employee);\r\n        } else {\r\n            await createEmployee(employee);\r\n        }\r\n        navigate(\"/\");\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <label>Name:</label>\r\n                <input name=\"name\" value={employee.name} onChange={handleChange} />\r\n            </div>\r\n            <div>\r\n                <label>Email:</label>\r\n                <input name=\"email\" value={employee.email} onChange={handleChange} />\r\n            </div>\r\n            <div>\r\n                <label>Phone:</label>\r\n                <input name=\"phone\" value={employee.phone} onChange={handleChange} />\r\n            </div>\r\n     <center></center>       <button type=\"submit\">{id ? \"Update\" : \"Create\"} Employee</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default EmployeeForm;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,cAAc,EAAEC,cAAc,EAAEC,YAAY,QAAQ,wBAAwB;AACrF,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EAC5E,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEe;EAAG,CAAC,GAAGd,SAAS,CAAC,CAAC;EAE1BF,SAAS,CAAC,MAAM;IACZ,IAAIgB,EAAE,EAAE;MACJ,eAAeC,aAAaA,CAAA,EAAG;QAC3B,MAAMC,SAAS,GAAG,MAAMb,YAAY,CAAC,CAAC;QACtC,MAAMc,GAAG,GAAGD,SAAS,CAACE,IAAI,CAAED,GAAG,IAAKA,GAAG,CAACH,EAAE,KAAKK,QAAQ,CAACL,EAAE,CAAC,CAAC;QAC5D,IAAIG,GAAG,EAAER,WAAW,CAACQ,GAAG,CAAC;MAC7B;MACAF,aAAa,CAAC,CAAC;IACnB;EACJ,CAAC,EAAE,CAACD,EAAE,CAAC,CAAC;EAER,MAAMM,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEX,IAAI;MAAEY;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCd,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACE,IAAI,GAAGY;IAAM,CAAC,CAAC,CAAC,CAAC;EACjD,CAAC;EAED,MAAME,YAAY,GAAG,MAAOH,CAAC,IAAK;IAC9BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAIX,EAAE,EAAE;MACJ,MAAMZ,cAAc,CAACY,EAAE,EAAEN,QAAQ,CAAC;IACtC,CAAC,MAAM;MACH,MAAMP,cAAc,CAACO,QAAQ,CAAC;IAClC;IACAK,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC;EAED,oBACIR,OAAA;IAAMqB,QAAQ,EAAEF,YAAa;IAAAG,QAAA,gBACzBtB,OAAA;MAAAsB,QAAA,gBACItB,OAAA;QAAAsB,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpB1B,OAAA;QAAOK,IAAI,EAAC,MAAM;QAACY,KAAK,EAAEd,QAAQ,CAACE,IAAK;QAACsB,QAAQ,EAAEZ;MAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,eACN1B,OAAA;MAAAsB,QAAA,gBACItB,OAAA;QAAAsB,QAAA,EAAO;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrB1B,OAAA;QAAOK,IAAI,EAAC,OAAO;QAACY,KAAK,EAAEd,QAAQ,CAACG,KAAM;QAACqB,QAAQ,EAAEZ;MAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC,eACN1B,OAAA;MAAAsB,QAAA,gBACItB,OAAA;QAAAsB,QAAA,EAAO;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrB1B,OAAA;QAAOK,IAAI,EAAC,OAAO;QAACY,KAAK,EAAEd,QAAQ,CAACI,KAAM;QAACoB,QAAQ,EAAEZ;MAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC,eACb1B,OAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC,WAAO,eAAA1B,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAAAN,QAAA,GAAEb,EAAE,GAAG,QAAQ,GAAG,QAAQ,EAAC,WAAS;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjF,CAAC;AAEf;AAACxB,EAAA,CAhDQD,YAAY;EAAA,QAEAP,WAAW,EACbC,SAAS;AAAA;AAAAkC,EAAA,GAHnB5B,YAAY;AAkDrB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}