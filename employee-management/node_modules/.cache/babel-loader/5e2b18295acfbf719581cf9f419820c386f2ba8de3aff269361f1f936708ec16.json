{"ast":null,"code":"var _jsxFileName = \"D:\\\\sai\\\\SpringBoot\\\\em-project\\\\employee-management\\\\src\\\\components\\\\EmployeeLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Login.css'; // Adjust your styling path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeLogin = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Default password\n  const defaultPassword = 'Employee123';\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Simulate a \"database\" of valid employees\n    const employees = [{\n      email: 'employee1@example.com',\n      employeeId: 'emp123'\n    }, {\n      email: 'employee2@example.com',\n      employeeId: 'emp124'\n    }\n    // Add more employees as needed\n    ];\n\n    // Find employee by email\n    const employee = employees.find(emp => emp.email === email);\n\n    // Check if the email exists and the password is the default one\n    if (employee && defaultPassword === 'Employee123') {\n      // Simulate login success by storing employee data in localStorage\n      localStorage.setItem('employeeId', employee.employeeId);\n      localStorage.setItem('email', employee.email);\n\n      // Navigate to the employee dashboard (or another page)\n      navigate('/employee-dashboard');\n    } else {\n      setError('Invalid login credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Enter your email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeLogin, \"OJeLhRBQz0jHVQ3MzbPx5xaykCo=\", false, function () {\n  return [useNavigate];\n});\n_c = EmployeeLogin;\nexport default EmployeeLogin;\nvar _c;\n$RefreshReg$(_c, \"EmployeeLogin\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","EmployeeLogin","_s","email","setEmail","error","setError","navigate","defaultPassword","handleSubmit","e","preventDefault","employees","employeeId","employee","find","emp","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["D:/sai/SpringBoot/em-project/employee-management/src/components/EmployeeLogin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/Login.css'; // Adjust your styling path as needed\r\n\r\nconst EmployeeLogin = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Default password\r\n  const defaultPassword = 'Employee123';\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Simulate a \"database\" of valid employees\r\n    const employees = [\r\n      { email: 'employee1@example.com', employeeId: 'emp123' },\r\n      { email: 'employee2@example.com', employeeId: 'emp124' },\r\n      // Add more employees as needed\r\n    ];\r\n\r\n    // Find employee by email\r\n    const employee = employees.find(emp => emp.email === email);\r\n\r\n    // Check if the email exists and the password is the default one\r\n    if (employee && defaultPassword === 'Employee123') {\r\n      // Simulate login success by storing employee data in localStorage\r\n      localStorage.setItem('employeeId', employee.employeeId);\r\n      localStorage.setItem('email', employee.email);\r\n\r\n      // Navigate to the employee dashboard (or another page)\r\n      navigate('/employee-dashboard');\r\n    } else {\r\n      setError('Invalid login credentials');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Employee Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Enter your email\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeLogin;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMU,eAAe,GAAG,aAAa;EAErC,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,SAAS,GAAG,CAChB;MAAET,KAAK,EAAE,uBAAuB;MAAEU,UAAU,EAAE;IAAS,CAAC,EACxD;MAAEV,KAAK,EAAE,uBAAuB;MAAEU,UAAU,EAAE;IAAS;IACvD;IAAA,CACD;;IAED;IACA,MAAMC,QAAQ,GAAGF,SAAS,CAACG,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACb,KAAK,KAAKA,KAAK,CAAC;;IAE3D;IACA,IAAIW,QAAQ,IAAIN,eAAe,KAAK,aAAa,EAAE;MACjD;MACAS,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEJ,QAAQ,CAACD,UAAU,CAAC;MACvDI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,QAAQ,CAACX,KAAK,CAAC;;MAE7C;MACAI,QAAQ,CAAC,qBAAqB,CAAC;IACjC,CAAC,MAAM;MACLD,QAAQ,CAAC,2BAA2B,CAAC;IACvC;EACF,CAAC;EAED,oBACEN,OAAA;IAAKmB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BpB,OAAA;MAAAoB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBxB,OAAA;MAAMyB,QAAQ,EAAEhB,YAAa;MAAAW,QAAA,gBAC3BpB,OAAA;QACE0B,IAAI,EAAC,OAAO;QACZC,KAAK,EAAExB,KAAM;QACbyB,QAAQ,EAAGlB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC,kBAAkB;QAC9BC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFxB,OAAA;QAAQ0B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,EACNnB,KAAK,iBAAIL,OAAA;MAAGmB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEf;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACtB,EAAA,CAlDID,aAAa;EAAA,QAGAH,WAAW;AAAA;AAAAkC,EAAA,GAHxB/B,aAAa;AAoDnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}