{"ast":null,"code":"var _jsxFileName = \"D:\\\\sai\\\\SpringBoot\\\\em-project\\\\employee-management\\\\src\\\\components\\\\TaskAssignment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/formStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskAssignment = () => {\n  _s();\n  const [task, setTask] = useState('');\n  const [employeeId, setEmployeeId] = useState('');\n  const handleAssign = e => {\n    e.preventDefault();\n    alert('Task Assigned!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Assign Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAssign,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Description\",\n        value: task,\n        onChange: e => setTask(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Employee ID\",\n        value: employeeId,\n        onChange: e => setEmployeeId(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Assign Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskAssignment, \"miEuIovXjV/1Ab5KlcSmI57RObU=\");\n_c = TaskAssignment;\nexport default TaskAssignment;\nvar _c;\n$RefreshReg$(_c, \"TaskAssignment\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskAssignment","_s","task","setTask","employeeId","setEmployeeId","handleAssign","e","preventDefault","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/sai/SpringBoot/em-project/employee-management/src/components/TaskAssignment.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/formStyle.css';\r\n\r\nconst TaskAssignment = () => {\r\n  const [task, setTask] = useState('');\r\n  const [employeeId, setEmployeeId] = useState('');\r\n\r\n  const handleAssign = (e) => {\r\n    e.preventDefault();\r\n    alert('Task Assigned!');\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Assign Task</h2>\r\n      <form onSubmit={handleAssign}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task Description\"\r\n          value={task}\r\n          onChange={(e) => setTask(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Employee ID\"\r\n          value={employeeId}\r\n          onChange={(e) => setEmployeeId(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Assign Task</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskAssignment;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,KAAK,CAAC,gBAAgB,CAAC;EACzB,CAAC;EAED,oBACEV,OAAA;IAAKW,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BZ,OAAA;MAAAY,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBhB,OAAA;MAAMiB,QAAQ,EAAEV,YAAa;MAAAK,QAAA,gBAC3BZ,OAAA;QACEkB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,kBAAkB;QAC9BC,KAAK,EAAEjB,IAAK;QACZkB,QAAQ,EAAGb,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE;QACzCG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFhB,OAAA;QACEkB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,aAAa;QACzBC,KAAK,EAAEf,UAAW;QAClBgB,QAAQ,EAAGb,CAAC,IAAKF,aAAa,CAACE,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE;QAC/CG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFhB,OAAA;QAAQkB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACd,EAAA,CA/BID,cAAc;AAAAuB,EAAA,GAAdvB,cAAc;AAiCpB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}