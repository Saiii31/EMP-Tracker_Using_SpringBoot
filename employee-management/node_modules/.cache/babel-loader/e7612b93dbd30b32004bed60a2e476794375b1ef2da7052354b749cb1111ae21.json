{"ast":null,"code":"var _jsxFileName = \"D:\\\\sai\\\\SpringBoot\\\\em-project\\\\employee-management\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// Importing Components for Routing\nimport AdminLogin from './components/AdminLogin';\nimport EmployeeLogin from './components/EmployeeLogin';\nimport AdminDashboard from './components/AdminDashboard';\nimport EmployeeDashboard from './components/EmployeeDashboard';\nimport EmployeeList from './components/EmployeeList';\nimport AddEmployee from './components/AddEmployee';\nimport EditEmployee from './components/EditEmployee';\nimport TaskAssignment from './components/TaskAssignment';\nimport TaskStatusUpdate from './components/TaskStatusUpdate';\nimport './App.css'; // Import CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isAdmin, setIsAdmin] = useState(false); // Flag for checking if admin is logged in\n\n  const handleAdminLogin = () => {\n    setIsAdmin(true); // Set as admin when logged in\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin-login\",\n          component: AdminLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/employee-login\",\n          component: EmployeeLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin-dashboard\",\n          children: isAdmin ? /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(AdminLogin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/employee-dashboard\",\n          component: EmployeeDashboard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/employee-list\",\n          component: EmployeeList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-employee\",\n          component: AddEmployee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit-employee\",\n          component: EditEmployee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/task-assignment\",\n          component: TaskAssignment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/task-status-update\",\n          component: TaskStatusUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Welcome to the Admin-Employee System\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eOJVfHUUHjCOH+0TSQ/uEMkBEGM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Switch","AdminLogin","EmployeeLogin","AdminDashboard","EmployeeDashboard","EmployeeList","AddEmployee","EditEmployee","TaskAssignment","TaskStatusUpdate","jsxDEV","_jsxDEV","App","_s","isAdmin","setIsAdmin","handleAdminLogin","children","className","path","component","fileName","_jsxFileName","lineNumber","columnNumber","exact","_c","$RefreshReg$"],"sources":["D:/sai/SpringBoot/em-project/employee-management/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// Importing Components for Routing\nimport AdminLogin from './components/AdminLogin';\nimport EmployeeLogin from './components/EmployeeLogin';\nimport AdminDashboard from './components/AdminDashboard';\nimport EmployeeDashboard from './components/EmployeeDashboard';\nimport EmployeeList from './components/EmployeeList';\nimport AddEmployee from './components/AddEmployee';\nimport EditEmployee from './components/EditEmployee';\nimport TaskAssignment from './components/TaskAssignment';\nimport TaskStatusUpdate from './components/TaskStatusUpdate';\n\nimport './App.css'; // Import CSS for styling\n\nconst App = () => {\n  const [isAdmin, setIsAdmin] = useState(false); // Flag for checking if admin is logged in\n\n  const handleAdminLogin = () => {\n    setIsAdmin(true); // Set as admin when logged in\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          {/* Admin Login Route */}\n          <Route path=\"/admin-login\" component={AdminLogin} />\n\n          {/* Employee Login Route */}\n          <Route path=\"/employee-login\" component={EmployeeLogin} />\n\n          {/* Admin Dashboard */}\n          <Route path=\"/admin-dashboard\">\n            {isAdmin ? <AdminDashboard /> : <AdminLogin />}\n          </Route>\n\n          {/* Employee Dashboard */}\n          <Route path=\"/employee-dashboard\" component={EmployeeDashboard} />\n\n          {/* Employee List */}\n          <Route path=\"/employee-list\" component={EmployeeList} />\n\n          {/* Add Employee */}\n          <Route path=\"/add-employee\" component={AddEmployee} />\n\n          {/* Edit Employee */}\n          <Route path=\"/edit-employee\" component={EditEmployee} />\n\n          {/* Task Assignment */}\n          <Route path=\"/task-assignment\" component={TaskAssignment} />\n\n          {/* Task Status Update */}\n          <Route path=\"/task-status-update\" component={TaskStatusUpdate} />\n          \n          {/* Redirect or fallback */}\n          <Route path=\"/\" exact>\n            <h1>Welcome to the Admin-Employee System</h1>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}